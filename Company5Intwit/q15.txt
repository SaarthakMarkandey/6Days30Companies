class Solution {
public:
    
    bool fn(vector<int>& piles,int h,int k){
        int th=0;
        
        for(int i=0;i<piles.size();i++){
            th+=ceil(piles[i]/(k*1.0));
        }
        if(th<=h)return 1;
        else return 0;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int mx=*max_element(piles.begin(),piles.end());
        
        int ans;
        int s=1,e=mx;
        
        while(s<=e){
            // cout<<"fef"<<endl;
            int mid=(s+e)/2;
            
            if(fn(piles,h,mid)){
                ans=mid;
                e=mid-1;
            }
            else s=mid+1;
        }
        return ans;
    }
};