// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;
#define N 1000


 // } Driver Code Ends
// you are required to complete this function 
// function should print the required range
class Solution{
    public:
    pair<int,int> findSmallestRange(int arr[][N], int n, int k)
    {
          //code here
          vector<pair<int,int>>v;
          
          
          for(int i=0;i<k;i++){
              for(int j=0;j<n;j++){
                  v.push_back({arr[i][j],i});
              }
          }
          sort(v.begin(),v.end());
          
          unordered_map<int,int>mp;
          
          int min=INT_MAX;
          pair<int,int>ans;
          
          int i=0,j=0;
          
          while(j<v.size()){
              pair<int,int>temp=v[j];
              
              int val=temp.first;
              int id=temp.second;
              
              mp[id]++;
              
              if(mp.size()<k)j++;
              else if(mp.size()==k){
                  while(mp.size()==k){
                      if(v[j].first-v[i].first+1<min){
                          min=v[j].first-v[i].first+1;
                          ans={v[i].first,v[j].first};
                      }
                      mp[v[i].second]--;
                      if(mp[v[i].second]==0){
                          mp.erase(v[i].second);
                      }
                      i++;
                  }
                  j++;
              }
          }
          return ans;
    }
};

// { Driver Code Starts.
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n, k;
        cin>>n>>k;
        int arr[N][N];
        pair<int,int> rangee;
        for(int i=0; i<k; i++)
            for(int j=0; j<n; j++)
                cin>>arr[i][j];
        Solution obj;
	    rangee = obj.findSmallestRange(arr, n, k);
	    cout<<rangee.first<<" "<<rangee.second<<"\n";
    }   
	return 0;
}

  // } Driver Code Ends